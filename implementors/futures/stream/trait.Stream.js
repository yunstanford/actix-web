(function() {var implementors = {};
implementors["actix_web"] = [{text:"impl&lt;S&gt; <a class=\"trait\" href=\"https://docs.rs/futures/0.1/futures/stream/trait.Stream.html\" title=\"trait futures::stream::Stream\">Stream</a> for <a class=\"struct\" href=\"actix_web/struct.HttpRequest.html\" title=\"struct actix_web::HttpRequest\">HttpRequest</a>&lt;S&gt;",synthetic:false,types:["actix_web::httprequest::HttpRequest"]},{text:"impl <a class=\"trait\" href=\"https://docs.rs/futures/0.1/futures/stream/trait.Stream.html\" title=\"trait futures::stream::Stream\">Stream</a> for <a class=\"struct\" href=\"actix_web/client/struct.ClientResponse.html\" title=\"struct actix_web::client::ClientResponse\">ClientResponse</a>",synthetic:false,types:["actix_web::client::response::ClientResponse"]},{text:"impl <a class=\"trait\" href=\"https://docs.rs/futures/0.1/futures/stream/trait.Stream.html\" title=\"trait futures::stream::Stream\">Stream</a> for <a class=\"struct\" href=\"actix_web/fs/struct.ChunkedReadFile.html\" title=\"struct actix_web::fs::ChunkedReadFile\">ChunkedReadFile</a>",synthetic:false,types:["actix_web::fs::ChunkedReadFile"]},{text:"impl <a class=\"trait\" href=\"https://docs.rs/futures/0.1/futures/stream/trait.Stream.html\" title=\"trait futures::stream::Stream\">Stream</a> for <a class=\"struct\" href=\"actix_web/ws/struct.ClientReader.html\" title=\"struct actix_web::ws::ClientReader\">ClientReader</a>",synthetic:false,types:["actix_web::ws::client::ClientReader"]},{text:"impl&lt;S&gt; <a class=\"trait\" href=\"https://docs.rs/futures/0.1/futures/stream/trait.Stream.html\" title=\"trait futures::stream::Stream\">Stream</a> for <a class=\"struct\" href=\"actix_web/ws/struct.WsStream.html\" title=\"struct actix_web::ws::WsStream\">WsStream</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"https://docs.rs/futures/0.1/futures/stream/trait.Stream.html\" title=\"trait futures::stream::Stream\">Stream</a>&lt;Item = <a class=\"struct\" href=\"https://docs.rs/bytes/0.4.6/bytes/bytes/struct.Bytes.html\" title=\"struct bytes::bytes::Bytes\">Bytes</a>, Error = <a class=\"enum\" href=\"actix_web/error/enum.PayloadError.html\" title=\"enum actix_web::error::PayloadError\">PayloadError</a>&gt;,&nbsp;</span>",synthetic:false,types:["actix_web::ws::WsStream"]},{text:"impl&lt;S&gt; <a class=\"trait\" href=\"https://docs.rs/futures/0.1/futures/stream/trait.Stream.html\" title=\"trait futures::stream::Stream\">Stream</a> for <a class=\"struct\" href=\"actix_web/multipart/struct.Multipart.html\" title=\"struct actix_web::multipart::Multipart\">Multipart</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"https://docs.rs/futures/0.1/futures/stream/trait.Stream.html\" title=\"trait futures::stream::Stream\">Stream</a>&lt;Item = <a class=\"struct\" href=\"https://docs.rs/bytes/0.4.6/bytes/bytes/struct.Bytes.html\" title=\"struct bytes::bytes::Bytes\">Bytes</a>, Error = <a class=\"enum\" href=\"actix_web/error/enum.PayloadError.html\" title=\"enum actix_web::error::PayloadError\">PayloadError</a>&gt;,&nbsp;</span>",synthetic:false,types:["actix_web::multipart::Multipart"]},{text:"impl&lt;S&gt; <a class=\"trait\" href=\"https://docs.rs/futures/0.1/futures/stream/trait.Stream.html\" title=\"trait futures::stream::Stream\">Stream</a> for <a class=\"struct\" href=\"actix_web/multipart/struct.Field.html\" title=\"struct actix_web::multipart::Field\">Field</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"https://docs.rs/futures/0.1/futures/stream/trait.Stream.html\" title=\"trait futures::stream::Stream\">Stream</a>&lt;Item = <a class=\"struct\" href=\"https://docs.rs/bytes/0.4.6/bytes/bytes/struct.Bytes.html\" title=\"struct bytes::bytes::Bytes\">Bytes</a>, Error = <a class=\"enum\" href=\"actix_web/error/enum.PayloadError.html\" title=\"enum actix_web::error::PayloadError\">PayloadError</a>&gt;,&nbsp;</span>",synthetic:false,types:["actix_web::multipart::Field"]},];

            if (window.register_implementors) {
                window.register_implementors(implementors);
            } else {
                window.pending_implementors = implementors;
            }
        
})()
